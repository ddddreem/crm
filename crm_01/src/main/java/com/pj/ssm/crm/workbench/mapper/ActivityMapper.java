package com.pj.ssm.crm.workbench.mapper;

import com.pj.ssm.crm.workbench.domain.Activity;

import java.util.List;
import java.util.Map;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 24 14:23:45 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 24 14:23:45 CST 2022
     */
    int insert(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 24 14:23:45 CST 2022
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 24 14:23:45 CST 2022
     */
    Activity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 24 14:23:45 CST 2022
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sun Apr 24 14:23:45 CST 2022
     */
    int updateByPrimaryKey(Activity record);

    /**
     * 插入活动
     */
    int insertActivity(Activity activity);
    /**
     * 查询所有的记录
     */
    List<Activity> selectAllActivity();

    /**
     * 根据条件查询活动记录
     */
    List<Activity> selectActivitiesSelective(Map<String, Object> map);

    /**
     * 查询总记录条数
     */
    Integer selectCountRecords();

    /**
     * 根据id数组批量删除市场活动
     */
    int deleteActivityByIds(String[] ids);

    /**
     * 根据id查找市场活动
     */
    Activity selectActivityByID(String id);

    /**
     * 更新数据
     */


    /**
     * 查询所有市场活动,特殊格式,为后面生成excel文件做准备
     */
    List<Activity> selectAllActivities();

    /**
     * 根据id数组查询市场活动并返回
     */
    List<Activity> selectActivitiesByIDs(String[] ids);

    /**
     * 根据list导入市场活动，用户导入excel，根据用户导入的excel文件中的市场活动保存到数据库
     */
    int insertActivitiesByList(List<Activity> activities);

    /**
     * 根据id获取市场活动详细信息，并传到页面
     */
    Activity selectDetailByID(String id);

    /**
     * 根据线索id查找所关联的所有市场活动
     */
    List<Activity> selectRelationActivitiesByClueId(String clueId);

    /**
     * 根据市场活动id数组查询市场活动
     */
    List<Activity> selectRelationActivitiesForBundByIds(String[] ids);

    /**
     * 根据市场活动名称模糊查询市场活动
     */
    List<Activity> selectActicityForBundByNameClueId(Map<String, Object> map);

    /**
     * 根据线索id查询市场活动信息
     */
    List<Activity> selectRelationActivitiesByNameClueId(Map<String, Object> map);

    /**
     * 根据市场活动名称模糊查询市场活动
     */
    List<Activity> selectActivitiesByActivityName(String activityName);
}