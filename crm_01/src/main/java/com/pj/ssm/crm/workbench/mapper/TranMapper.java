package com.pj.ssm.crm.workbench.mapper;

import com.pj.ssm.crm.workbench.domain.Funnel;
import com.pj.ssm.crm.workbench.domain.Tran;

import java.util.List;

public interface TranMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Fri May 13 12:32:25 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Fri May 13 12:32:25 CST 2022
     */
    int insert(Tran record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Fri May 13 12:32:25 CST 2022
     */
    int insertSelective(Tran record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Fri May 13 12:32:25 CST 2022
     */
    Tran selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Fri May 13 12:32:25 CST 2022
     */
    int updateByPrimaryKeySelective(Tran record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Fri May 13 12:32:25 CST 2022
     */
    int updateByPrimaryKey(Tran record);

    /**
     * 保存线索转换的交易
     */
    int insertConvertTran(Tran convertTran);

    /**
     * 根据条件返回全部的交易,前台页面用于分页
     */
    List<Tran> selectAllTrans(Tran conditionTran);

    /**
     * 根据交易id查询交易明细
     */
    Tran selectTranDetailById(String id);

    /**
     * 返回echarts图表所需要的数据
     */
    List<Funnel> selectCountOfTranGroupByStage();

    /**
     * 保存新建交易
     */
    int insertCreateTran(Tran newTran);
}