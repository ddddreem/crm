package com.pj.ssm.crm.workbench.mapper;

import com.pj.ssm.crm.workbench.domain.ClueActivityRelation;

import java.util.List;
import java.util.Map;

public interface ClueActivityRelationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Mon May 09 10:27:09 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Mon May 09 10:27:09 CST 2022
     */
    int insert(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Mon May 09 10:27:09 CST 2022
     */
    int insertSelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Mon May 09 10:27:09 CST 2022
     */
    ClueActivityRelation selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Mon May 09 10:27:09 CST 2022
     */
    int updateByPrimaryKeySelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Mon May 09 10:27:09 CST 2022
     */
    int updateByPrimaryKey(ClueActivityRelation record);

    /**
     * 根据activityId数组和clueId组成的map保存关联关系
     */
    int insertByActivityClueIdList(List<ClueActivityRelation> clueActivityRelationList);

    /**
     * 根据activityId和clueId删除关联关系
     */
    int deleteRelationByActivityIdAndClueId(Map<String, Object> map);

    /**
     * 根据线索id查找关联的市场活动
     */
    List<ClueActivityRelation> selectClueActivityRelationByClueId(String clueId);

    /**
     * 根据线索id删除所有关联关系
     */
    int deleteClueActivityRelationByClueId(String clueId);
}